---
import Logo from '../assets/logo.svg?raw';
import Layout from '../layouts/Layout.astro';
const patchData = await import('../data/parches/patch-25-s1-2.json');
---

<Layout title="Parches">
    <div class="patch-notes-container">
        <div class="patch-header">
            <div class="logo-container" set:html={Logo} />
            <h1 class="patch-title">NOTAS DEL PARCHE <span class="patch-version">25.S1.2</span></h1>
            <div class="banner-preview" title="Abrir resumen">
                <img src={patchData.banner} alt="Banner del parche" class="preview-img" />
            </div>
        </div>

        <div class="patch-content">
            <div class="patch-tabs">
                <button class="tab-btn active" data-tab="champions">CAMPEONES</button>
                <button class="tab-btn" data-tab="items">ITEMS</button>
                <button class="tab-btn" data-tab="game">JUEGO</button>
                <a href="/" class="back-btn">VOLVER</a>
            </div>

            <div id="champions" class="tab-content active">
                <div class="champions-grid">
                    {patchData.champions.map((champion) => (
                        <div class="champion-card">
                            <div class="champion-header">
                                <img src={champion.image_URL} alt={champion.name} class="champion-icon" />
                                <div class="champion-info">
                                    <h3>{champion.name}</h3>
                                    <p class="summary">{champion.summary}</p>
                                </div>
                            </div>
                            <div class="champion-changes">
                                {Object.entries(champion.changes).map(([ability, data]) => (
                                    <div class="ability-change">
                                        <div class="ability-header">
                                            <img src={data.image} alt={data.name} class="ability-icon" />
                                            <span class="ability-name">{data.name}</span>
                                        </div>
                                        <p class="change-description">{data.changes}</p>
                                    </div>
                                ))}
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            <div id="items" class="tab-content">
                <div class="items-grid">
                    {patchData.items.map((item) => (
                        <div class="item-card">
                            <img src={item.image} alt={item.name} class="item-icon" />
                            <div class="item-info">
                                <h3>{item.name}</h3>
                                <p class="change-description">{item.changes}</p>
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            <div id="game" class="tab-content">
                <div class="game-changes">
                    {patchData.gameChanges.map((change) => (
                        <div class="game-change-card">
                            <p class="change-description">{change.description}</p>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    </div>
</Layout>

<!-- Modal para la imagen del banner -->
<div id="banner-modal" class="modal">
    <div class="modal-content">
        <span class="close-modal">&times;</span>
        <img src={patchData.banner} alt="Banner del parche" class="modal-banner" />
    </div>
</div>

<style>
    .patch-notes-container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Roboto', sans-serif;
        display: flex;
        flex-direction: column;
    }

    .patch-header {
        display: flex;
        align-items: center;
        gap: 20px;
        margin-bottom: 30px;
        background: rgba(26, 29, 33, 0.4);
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        padding: 20px;
    }

    .patch-title {
        color: white;
        font-size: 24px;
        font-weight: 800; /* Extrabold */
        margin: 0;
        flex-grow: 1;
        text-align: center;
    }

    .patch-version {
        color: #f54245; /* Color rojo de la web */
    }

    .banner-preview {
        width: 160px;
        height: 90px;
        border-radius: 12px;
        overflow: hidden;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        border: 2px solid transparent;
    }

    .banner-preview::after {
        content: 'Abrir resumen';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        padding: 8px 0;
        background: #f54245;
        color: white;
        font-size: 14px;
        font-weight: 600;
        text-align: center;
        transform: translateY(100%);
        transition: transform 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .banner-preview:hover {
        border-color: #f54245;
        box-shadow: 0 0 20px rgba(245, 66, 69, 0.3);
    }

    .banner-preview:hover::after {
        transform: translateY(0);
    }

    .preview-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: all 0.3s ease;
    }

    .banner-preview:hover .preview-img {
        transform: scale(1.1);
    }

    .logo-container {
        width: 70px;
        height: 70px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .logo-container:hover {
        opacity: 0.8;
    }

    .logo-container :global(svg) {
        width: 100%;
        height: 100%;
    }

    .patch-content {
        background: rgba(26, 29, 33, 0.7);
        backdrop-filter: blur(20px);
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        padding: 30px;
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
        flex: 1;
        display: flex;
        flex-direction: column;
        min-height: 0; /* Importante para que el scroll funcione */
    }

    .patch-tabs {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        padding-bottom: 20px;
        position: relative;
        flex-shrink: 0; /* Evita que las pesta√±as se encojan */
    }

    .tab-btn {
        padding: 12px 24px;
        background: transparent;
        border: none;
        color: #9aa4af;
        font-size: 16px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
    }

    .tab-btn:hover {
        color: white;
    }

    .tab-btn.active {
        color: #f54245;
    }

    .tab-btn.active::after {
        content: '';
        position: absolute;
        bottom: -21px;
        left: 0;
        width: 100%;
        height: 3px;
        background: #f54245;
        border-radius: 3px;
    }

    .tab-content {
        display: none;
        overflow-y: auto;
        flex: 1;
        padding-right: 10px; /* Espacio para el scrollbar */
    }

    .tab-content.active {
        display: block;
    }

    /* Estilo para el scrollbar */
    .tab-content::-webkit-scrollbar {
        width: 8px;
    }

    .tab-content::-webkit-scrollbar-track {
        background: rgba(26, 29, 33, 0.4);
        border-radius: 4px;
    }

    .tab-content::-webkit-scrollbar-thumb {
        background: #f54245;
        border-radius: 4px;
    }

    .tab-content::-webkit-scrollbar-thumb:hover {
        background: #ff5a5d;
    }

    .champions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
    }

    .champion-card {
        background: rgba(26, 29, 33, 0.4);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 20px;
    }

    .champion-header {
        display: flex;
        gap: 15px;
        margin-bottom: 20px;
    }

    .champion-icon {
        width: 64px;
        height: 64px;
        border-radius: 12px;
        border: 2px solid rgba(255, 255, 255, 0.1);
        transition: all 0.3s ease;
        position: relative;
        cursor: pointer;
    }

    .champion-icon:hover {
        transform: scale(1.1);
        border-color: #f54245;
        box-shadow: 0 0 20px rgba(245, 66, 69, 0.3);
    }

    .champion-info h3 {
        color: white;
        margin: 0 0 8px 0;
        font-size: 18px;
    }

    .summary {
        color: #9aa4af;
        margin: 0;
        font-size: 14px;
        line-height: 1.4;
    }

    .champion-changes {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .ability-change {
        background: rgba(26, 29, 33, 0.6);
        border-radius: 8px;
        padding: 12px;
    }

    .ability-header {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 8px;
    }

    .ability-icon {
        width: 32px;
        height: 32px;
        border-radius: 6px;
    }

    .ability-name {
        color: #e1e5ea;
        font-weight: 500;
        font-size: 14px;
    }

    .change-description {
        color: #9aa4af;
        margin: 0;
        font-size: 14px;
        line-height: 1.4;
    }

    .items-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
    }

    .item-card {
        display: flex;
        align-items: center;
        gap: 15px;
        background: rgba(26, 29, 33, 0.4);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 15px;
    }

    .item-icon {
        width: 48px;
        height: 48px;
        border-radius: 8px;
    }

    .item-info h3 {
        color: white;
        margin: 0 0 8px 0;
        font-size: 16px;
    }

    .game-changes {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .game-change-card {
        background: rgba(26, 29, 33, 0.4);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 20px;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.9);
        backdrop-filter: blur(8px);
        z-index: 1000;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        position: relative;
        width: 90%;
        max-width: 1200px;
        margin: 50px auto;
        background: rgba(26, 29, 33, 0.95);
        padding: 30px;
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.5);
    }

    .close-modal {
        position: absolute;
        right: 20px;
        top: 20px;
        font-size: 28px;
        color: white;
        cursor: pointer;
        z-index: 1;
        width: 32px;
        height: 32px;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

    .close-modal:hover {
        background: rgba(245, 66, 69, 0.8);
    }

    .modal-banner {
        width: 100%;
        height: auto;
        border-radius: 12px;
    }

    .back-btn {
        position: absolute;
        right: 0;
        padding: 12px 24px;
        background: transparent;
        border: 1px solid #f54245;
        border-radius: 8px;
        color: #f54245;
        font-size: 16px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .back-btn:hover {
        background: #f54245;
        color: white;
    }
</style>

<script>
    // Manejo de las pesta√±as
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');

    tabButtons.forEach(button => {
        button.addEventListener('click', () => {
            // Remover clase active de todos los botones y contenidos
            tabButtons.forEach(btn => btn.classList.remove('active'));
            tabContents.forEach(content => content.classList.remove('active'));

            // Agregar clase active al bot√≥n clickeado y su contenido correspondiente
            button.classList.add('active');
            const tabId = button.dataset.tab;
            document.getElementById(tabId).classList.add('active');
        });
    });

    // Manejo del selector de parches
    const patchSelect = document.getElementById('patch-version');
    patchSelect?.addEventListener('change', (e) => {
        const selectedPatch = e.target.value;
        // Aqu√≠ puedes agregar la l√≥gica para cargar diferentes parches
        console.log('Parche seleccionado:', selectedPatch);
    });

    // Manejo del modal
    const bannerPreview = document.querySelector('.banner-preview');
    const modal = document.getElementById('banner-modal');
    const closeModal = document.querySelector('.close-modal');

    bannerPreview?.addEventListener('click', () => {
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    });

    closeModal?.addEventListener('click', () => {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    });

    window.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    });
</script> 