---
import Layout from "../layouts/Layout.astro"
---
<Layout title="Champion">
    <main>
        <div class="champion-info">
          <div class="champion-avatar"></div>
          <div class="champion-details">
            <div class="chmpion-textos">
              <h1>
                <span class="champion-name"></span>
                <span class="champion-subtitle">Counters y Picks, <span class="champion-score">15.2</span></span>
              </h1>
            </div>
            <div class="champion-bar">
            </div>
          </div>
        </div>
        <section class="counters">
          <h2>BUENO CONTRA</h2>
          <div class="cards-grid">
            {Array(5).fill(null).map(() => (
              <div class="counter-card good"></div>
            ))}
          </div>
        </section>
        <section class="counters">
          <h2>MALO CONTRA</h2>
          <div class="cards-grid">
            {Array(5).fill(null).map(() => (
              <div class="counter-card bad"></div>
            ))}
          </div>
        </section>
    </main>
</Layout>

<script>
  let champions = [];

fetch("../src/data/champions.json")
    .then(respuesta => {
        console.log("Respuesta del fetch:", respuesta);
        return respuesta.json(); // Convertir a JSON
    })
    .then(data => {
        console.log("Datos del JSON:", data); // Verificar los datos obtenidos
        champions = data;
        buscarChampionDesdeSessionStorage(champions);
    })
    .catch(error => console.error("Error al cargar el JSON:", error));

    function buscarChampionDesdeSessionStorage(championsData) {
    // Aca declaro nombre = al nombre del champion seleccionado.
    let nombre = sessionStorage.getItem("championSelected");
    // Aca obtengo la etiqueta span del html y le coloco el valor del champion seleccionado.
    const nombreChampion = document.querySelector(".champion-name")
    if (nombreChampion) {
        nombreChampion.innerHTML = nombre.toUpperCase();
    }

    let championInfo = championsData;
    let champion = null;

    //// Buscar el campeón con forEach
    championInfo.forEach(champ => {
        if (champ.name.toLowerCase() === nombre.toLowerCase()) {
            champion = champ;
            console.log("ChampSeleccinado: " + champion.image_url)
        }
    });
    const championAvatar = document.querySelector(".champion-avatar")
    if (champion) {
        championAvatar.innerHTML = `
            <img 
            src="${champion.image_url}" 
            alt="${champion.name}"
            style="width: 100px; border-radius: 8px;"
            >
        `;
    }
    }
</script>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');
  :root {
    --color-background: #0a0a0a;
    --color-card: #1a1a1a;
    --color-text: #ffffff;
    --color-accent-red: #ff4655;
    --color-accent-blue: #7289da;
    --color-bar: #ffd700;
  }

  main {
    width: 100%;
    min-height: 100vh;
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    padding-top: 25px;
    padding-bottom: 25px;
    overflow-x: hidden;
  }

  .header-buttons {
    display: flex;
    gap: 10px;
    align-items: center;
  }

  .button-back {
    width: 40px;
    height: 40px;
    border-radius: 8px;
    background-color: #1A1D21;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #45464B;
  }

  .button-back:hover{
    background-color: #F54245;
    color: white;
  }

  .champion-info {
    width: 60%;
    height: auto; /* Cambiado de 140px a auto */
    margin-top: 0; /* Eliminado margin-top */
    display: flex;
    margin-bottom: 20px; /* Reducido de 40px a 20px */
    align-items: flex-start; /* Añadido para alinear contenido */
  }

  .champion-avatar {
    width: 140px;
    height: 120px;
    background-color: #3E4147;
    border-radius: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 30px;
  }
  
  .champion-details {
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: column;
    gap: 10px; /* Reducido de 15px a 10px */
  }
  
  .chmpion-textos{
    width: 100%;
    height: 30px;
  }
  
  .champion-bar {
    width: 100%;
    height: 70px;
    margin-top: 10px;
    border-radius: 8px;
    background-color: #191d23;
    display: flex;
    align-items: center;
    padding: 0 0px;
    position: relative;
    margin-left: auto;
    margin-right: auto;
  }

  .champion-bar::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background-color: var(--tier-color);
  }

  .tier-letter {
    font-size: 3.5rem;
    font-weight: 800;
    font-family: "Plus Jakarta Sans", sans-serif;
    color: var(--tier-color);
    text-shadow: 0 0 15px var(--tier-color);
    width: 80px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    margin: 0;
    line-height: 1;
  }

  .champion-stats {
    flex: 0 1 auto; /* Cambiar a flex-grow: 0 para que no se expanda demasiado */
    display: flex;
    justify-content: flex-start; /* Cambiar a flex-start */
    align-items: center;
    margin-left: 2rem;
    color: #fff;
    font-family: "Roboto Mono", monospace;
    position: relative;
    min-width: 300px; /* Añadir un ancho mínimo */
  }

  .stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0 1.5rem; /* Reducir el padding */
    position: relative;
  }

  .stat:not(:last-child)::after {
    content: '';
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 1px;
    height: 70%;
    background-color: #2f3136;
  }

  .stat-value {
    font-size: 1.2rem;
    font-weight: 600;
  }

  .stat-label {
    font-size: 0.8rem;
    color: #5a5b5d;
  }

  [data-tier="S+"] {
    --tier-color: #ffdd75;
  }

  [data-tier="S"] {
    --tier-color: #bd9af2;
  }

  [data-tier="A"] {
    --tier-color: #beecfa;
  }

  [data-tier="B"] {
    --tier-color: #9ad47f;
  }

  [data-tier="C"] {
    --tier-color: #f59551;
  }

  [data-tier="D"] {
    --tier-color: #686b6e;
  }

  .champion-name {
    color: var(--color-accent-red);
    text-transform: uppercase;
    font-weight: 900;
    font-size: 1.5rem;
  }

  .champion-subtitle {
    color: #5a5b5d;
    font-size: 0.9rem;
  }

  .position-icon {
    display: inline-flex;
    align-items: center;
    margin: 0 0.8rem;
  }

  .role-svg {
    display: none;
    color: #5a5b5d;
    width: 24px;
    height: 24px;
  }

  .role-svg.active {
    display: inline-block;
  }

  h1 {
    font-family: "Roboto mono", monospace;
    margin: 0;
    font-size: 1.2rem;
    display: flex;
    gap: 0.8rem;
    align-items: center;
    height: 100%;
  }

  .counters {
    width: 60%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 10px; /* Reducido de 15px a 10px */
  }

  /* La última sección de counters no necesita margin-bottom */
  .counters:last-child {
    margin-bottom: 0;
  }

  h2 {
    margin: 0;
    font-size: 1rem;
    font-family: "Roboto mono", monospace;
    font-weight: 800;
  }

  .counters:first-of-type h2 {
    color: var(--color-accent-blue);
  }

  .counters:last-of-type h2 {
    color: #f54245;
  }

  .cards-grid {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 1rem;
  }

  .counter-card {
    aspect-ratio: 3/4;
    background: var(--color-card);
    border-radius: 8px;
    transition: transform 0.2s;
    background-size: cover;
    background-position: center;
    overflow: hidden;
  }

  .counter-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .abilities-container {
    display: flex;
    gap: 0.5rem;
    margin-left: auto;
    padding-right: 1rem;
    height: 100%;
    align-items: center;
  }

  .ability-icon {
    position: relative;
    width: 2.5rem;
    height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ability-icon img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0.25rem;
    background-color: #1a1a1a;
  }

  .ability-key {
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.7);
    color: #fff;
    font-size: 0.7rem;
    font-weight: bold;
    z-index: 2;
    padding: 0.1rem 0.3rem;
    border-radius: 0.25rem;
    text-shadow: none;
  }

  .abilities-button {
    background: #F54245;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 8px;
    cursor: pointer;
    font-family: "Roboto Mono", monospace;
    font-weight: bold;
    font-size: 14px;
    transition: background-color 0.2s;
    height: fit-content;
    white-space: nowrap;
  }

  .abilities-button:hover {
    background: #ff6668;
  }

  .abilities-popup {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(8px);
    z-index: 1000;
    justify-content: center;
    align-items: center;
  }

  .popup-content {
    position: relative;
    width: 80%;
    max-width: 1200px;
    background: #282828;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .abilities-video-container {
    width: 100%;
    aspect-ratio: 16/9;
    position: relative;
    border-radius: 8px;
    overflow: hidden;
  }

  .ability-controls {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    backdrop-filter: blur(8px);
  }

  .ability-buttons {
    display: flex;
    gap: 12px;
    align-items: center;
  }

  .ability-selector {
    position: relative;
    width: 50px;
    height: 50px;
    padding: 0;
    border: 2px solid rgba(245, 66, 69, 0.5);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    background: rgba(26, 27, 30, 0.9);
    overflow: visible;
  }

  .ability-selector:hover {
    border-color: #F54245;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(245, 66, 69, 0.3);
  }

  .ability-selector.active {
    border-color: #F54245;
    box-shadow: 0 0 15px rgba(245, 66, 69, 0.5);
    transform: scale(1.1);
  }

  .popup-ability-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 6px;
    z-index: 1;
    background-color: #1a1a1a;
    clip-path: inset(0);
    position: relative;
  }

  .popup-ability-img::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 6px;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  .popup-ability-key {
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.8);
    color: #fff;
    font-size: 0.8rem;
    font-weight: bold;
    z-index: 10; /* Aumentado para estar por encima de la imagen */
    padding: 2px 6px;
    border-radius: 4px;
    text-shadow: none;
    font-family: "Roboto Mono", monospace;
    border: 1px solid rgba(245, 66, 69, 0.3);
    min-width: 20px;
    text-align: center;
  }

  .popup-ability-key {
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.8);
    color: #fff;
    font-size: 0.8rem;
    font-weight: bold;
    z-index: 10; /* Aumentado para estar por encima de la imagen */
    padding: 2px 6px;
    border-radius: 4px;
    text-shadow: none;
    font-family: "Roboto Mono", monospace;
    border: 1px solid rgba(245, 66, 69, 0.3);
    min-width: 20px;
    text-align: center;
  }

  .ability-selector.active .popup-ability-key {
    background-color: rgba(245, 66, 69, 0.8);
  }

  .close-popup {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 32px;
    height: 32px;
    border: none;
    border-radius: 50%;
    background: rgba(245, 66, 69, 0.2);
    color: white;
    font-size: 20px;
    cursor: pointer;
    transition: all 0.2s ease;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(4px);
  }

  .close-popup:hover {
    background: #F54245;
    transform: rotate(90deg);
  }

  .abilities-popup.active {
    display: flex;
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      backdrop-filter: blur(0px);
    }
    to {
      opacity: 1;
      backdrop-filter: blur(8px);
    }
  }

  .abilities-section {
    display: flex;
    flex-direction: column;
    gap: 10px;
    position: relative;
  }

  .abilities-header {
    display: flex;
    justify-content: flex-start;
    margin-bottom: 10px;
  }

  .ability-label {
    position: absolute;
    bottom: -25px;
    left: 50%;
    transform: translateX(-50%);
    color: #fff;
    font-size: 13px;
    font-weight: bold;
    text-transform: uppercase;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
    letter-spacing: 1px;
    background: rgba(10, 10, 10, 0.8);
    padding: 3px 8px;
    border-radius: 4px;
    border: 1px solid rgba(245, 66, 69, 0.3);
    backdrop-filter: blur(4px);
    white-space: nowrap;
  }

  .ability-selector.active .ability-label {
    color: #F54245;
    border-color: #F54245;
    background: rgba(10, 10, 10, 0.95);
  }

  .champion-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 100%;
    margin-bottom: 15px; /* Añadido espacio entre header y champion-bar */
  }
</style>